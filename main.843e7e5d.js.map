{"version":3,"sources":["scripts/main.js"],"names":["sortList","employeeList","sort","a","b","salary","getEmployees","list","employee","li","push","name","textContent","trim","position","dataset","replace","age","employees","document","querySelectorAll","sortedList","makeList","querySelector","innerHTML","insertAdjacentHTML","toLocaleString"],"mappings":";AAAA,aAoCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCD,SAASA,EAASC,GACT,OAAA,EAAIA,GAAcC,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEC,OAASF,EAAEE,SAGvD,SAASC,EAAaC,GACdC,IADoB,EACpBA,EAAW,GAEAD,EAAAA,EAAAA,GAHS,IAGH,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZE,IAAAA,EAAY,EAAA,MACrBD,EAASE,KAAK,CACZC,KAAMF,EAAGG,YAAYC,OACrBC,SAAUL,EAAGM,QAAQD,SACrBT,QAASI,EAAGM,QAAQV,OAAOW,QAAQ,QAAS,IAC5CC,KAAMR,EAAGM,QAAQE,OARK,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAYnBT,OAAAA,EAGT,IAAMU,EAAYZ,EAAaa,SAASC,iBAAiB,OACnDC,EAAarB,EAASkB,GAEtBI,EAAWH,SAASI,cAAc,MAExCD,EAASE,UAAY,GAEEH,IAQtB,EARsBA,EAAAA,EAAAA,GAQtB,IARkC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAxBb,IAAAA,EAAwB,EAAA,MACjCc,EAASG,mBAAmB,YACZjB,wBAAAA,OAAAA,EAASM,SACLN,0BAAAA,OAAAA,EAASH,OAAOqB,iBACzBlB,iBAAAA,OAAAA,EAASS,IAElBT,WAAAA,OAAAA,EAASG,KALX,aAOD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.843e7e5d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction sortList(employeeList) {\n  return [...employeeList].sort((a, b) => b.salary - a.salary);\n}\n\nfunction getEmployees(list) {\n  const employee = [];\n\n  for (const li of list) {\n    employee.push({\n      name: li.textContent.trim(),\n      position: li.dataset.position,\n      salary: +li.dataset.salary.replace(/[$,]/g, ''),\n      age: +li.dataset.age,\n    });\n  }\n\n  return employee;\n}\n\nconst employees = getEmployees(document.querySelectorAll('li'));\nconst sortedList = sortList(employees);\n\nconst makeList = document.querySelector('ul');\n\nmakeList.innerHTML = '';\n\nfor (const employee of sortedList) {\n  makeList.insertAdjacentHTML('beforeend', `<li\n  data-position=${employee.position}\n  data-salary=\"$\" + ${employee.salary.toLocaleString()}\n  data-age=${employee.age}\n>\n  ${employee.name}\n</li>`);\n}\n"]}